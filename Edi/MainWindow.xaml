<mui:ModernWindow x:Class="Edi.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mui="http://firstfloorsoftware.com/ModernUI"
     
        xmlns:view="clr-namespace:Edi.View"
        xmlns:conv="clr-namespace:Edi.Converter"

        xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
        xmlns:AvalondockConv="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
             
        xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
        xmlns:pane="clr-namespace:Edi.View.Pane"
        xmlns:local="clr-namespace:Edi"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:syswin="clr-namespace:System.Windows;assembly=PresentationCore"
             
        xmlns:behav="clr-namespace:EdiViews.Behaviour;assembly=EdiViews"
        xmlns:AVBehav="clr-namespace:Edi.View.Behavior"
        xmlns:EdiViewsConv="clr-namespace:EdiViews.Converter;assembly=EdiViews"
             
        xmlns:EdiViewsStartP="clr-namespace:EdiViews.StartPage;assembly=EdiViews"
        xmlns:EdiViewsRecent="clr-namespace:EdiViews.Tools.RecentFiles;assembly=EdiViews"
        xmlns:EdiViewsLog4Net="clr-namespace:EdiViews.Tools.Log4Net;assembly=EdiViews"
        xmlns:EdiViewsFileStats="clr-namespace:EdiViews.Tools.FileStats;assembly=EdiViews"
        xmlns:EdiViewsFileExplorer="clr-namespace:EdiViews.Tools.FileExplorer;assembly=EdiViews"
             
        xmlns:MiniUMLViews="clr-namespace:MiniUML.View.Views;assembly=MiniUML.View"

        xmlns:avalonEdit="clr-namespace:ICSharpCode.AvalonEdit.Highlighting;assembly=ICSharpCode.AvalonEdit"
     
        xmlns:yalvView="clr-namespace:YalvLib.View;assembly=YalvLib"
        xmlns:busi="clr-namespace:YalvLib.Behaviour.BusyIndicatorBehavior;assembly=YalvLib"
     
        xmlns:cmd="clr-namespace:Util.Command;assembly=Util"
        xmlns:cmdLabel="clr-namespace:Util.Local;assembly=Util"

        Title="{Binding ApplicationTitle}"
        Icon="/Edi;component/EdiLogo.ico"
        behav:DialogCloser.DialogResult="{Binding DialogCloseResult}"        
        behav:WindowMaximized.IsNotMaximized="{Binding IsNotMaximized,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
        >
    <Grid>
      <Grid.Resources>
        <conv:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
        <AvalondockConv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
      </Grid.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="32"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

      <!-- view:MainMenu Grid.Row="1" VerticalAlignment="Bottom"/ -->

    <view:MainToolbar Grid.Row="2" SnapsToDevicePixels="True" Margin="3" />

    <avalonDock:DockingManager AnchorablesSource="{Binding Tools}" 
                               DocumentsSource="{Binding Files}"
                               ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                               Grid.Row="3"
                               SnapsToDevicePixels="True"

                               AllowDrop="True"
                               behav:DropFileCommand.DropCommand="cmd:AppCommand.LoadFile"
                               AVBehav:AvalonDockLayoutSerializer.LoadLayoutCommand="{Binding ADLayout.LoadLayoutCommand}"
                               AVBehav:AvalonDockLayoutSerializer.SaveLayoutCommand="{Binding ADLayout.SaveLayoutCommand}"
                               >
        <avalonDock:DockingManager.DocumentHeaderTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
              <!-- Show IsReadOnly Icon in document tab if that properties' present and true -->
              <Image Source="{DynamicResource Image_DocTabReadOnly}" Margin="3,0,0,0"
                     VerticalAlignment="Center">
                <Image.Visibility>
                  <PriorityBinding FallbackValue="Collapsed">
                    <Binding Path="Content.IsReadOnly" Mode="OneWay" Converter="{StaticResource BoolToVisibilityConverter}" />
                  </PriorityBinding>
                </Image.Visibility>
                <Image.ToolTip>
                  <PriorityBinding FallbackValue="">
                    <Binding Path="Content.IsReadOnlyReason" Mode="OneWay" />
                  </PriorityBinding>
                </Image.ToolTip>
              </Image>
            </StackPanel>
          </DataTemplate>
        </avalonDock:DockingManager.DocumentHeaderTemplate>
        <avalonDock:DockingManager.DocumentContextMenu>
          <ContextMenu>
            <MenuItem Header="{x:Static cmdLabel:Strings.STR_AppCommand_OpenContainingFolder}" 
                    Command="{Binding Model.OpenContainingFolderCommand}"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="{x:Static cmdLabel:Strings.STR_AppCommand_OpenContainingFolder_TT}"
                    />

            <MenuItem Header="{x:Static cmdLabel:Strings.STR_AppCommand_CopyFileURLToClipboard}" 
                    Command="{Binding Model.CopyFullPathtoClipboard}"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="{x:Static cmdLabel:Strings.STR_AppCommand_CopyFileURLToClipboard_TT}"
                    />
            <Separator/>

            <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Close}" 
                    Command="{Binding Path=CloseCommand}"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                    />

            <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" 
                    Command="{Binding Path=CloseAllButThisCommand}"
                    />

            <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_Float}" 
                    Command="{Binding Path=FloatCommand}"
                    />

            <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" 
                    Command="{Binding Path=DockAsDocumentCommand}"
                    />

            <MenuItem Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}" 
                    Command="{Binding Path=NewHorizontalTabGroupCommand}"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                    >
              <!-- MenuItem.Icon>
              <Image Source="/Xceed.Wpf.AvalonDock.Themes.Aero;component/Images/HTabGroup.png" Stretch="Uniform" Width="14"/>
            </MenuItem.Icon -->
            </MenuItem>
          </ContextMenu>
        </avalonDock:DockingManager.DocumentContextMenu>
        <avalonDock:DockingManager.LayoutItemTemplateSelector>
          <pane:PanesTemplateSelector>
            <pane:PanesTemplateSelector.StartPageViewTemplate>
              <DataTemplate>
                <EdiViewsStartP:StartPageView />
              </DataTemplate>
            </pane:PanesTemplateSelector.StartPageViewTemplate>

            <!-- Log4Net Document Viewer and Tool Windows -->
            <pane:PanesTemplateSelector.Log4NetViewTemplate>
              <DataTemplate>
                <Grid busi:BusyIndicatorBehavior.BusyState="{Binding Yalv.LogItems.LogFile.IsLoading}">
                  <yalvView:YalvView DataContext="{Binding Yalv}"
                                   Margin="0,3,0,0"
                                   Columns="{Binding LogItems.DataGridColumns}"
                                   Focusable="True"
                                   KeyboardNavigation.IsTabStop="True"
                                   Name="ValvView"
                                   behav:KeyboardFocus.On="{Binding ElementName=ValvView}"
              />
                </Grid>
              </DataTemplate>
            </pane:PanesTemplateSelector.Log4NetViewTemplate>
            <!-- Log4Net Tool Window -->
            <pane:PanesTemplateSelector.Log4NetToolViewTemplate>
              <DataTemplate>
                <EdiViewsLog4Net:Log4NetToolView />
              </DataTemplate>
            </pane:PanesTemplateSelector.Log4NetToolViewTemplate>
            <pane:PanesTemplateSelector.Log4NetMessageToolViewTemplate>
              <DataTemplate>
                <EdiViewsLog4Net:Log4NetMessageView />
              </DataTemplate>
            </pane:PanesTemplateSelector.Log4NetMessageToolViewTemplate>
            <!-- End of Log$Net -->

            <pane:PanesTemplateSelector.FileViewTemplate>
              <DataTemplate>
                <!-- Known problem: Options must be bound or the control will show a gray bar otherwise -->
                <view:EdiView
                      Visibility="{Binding State,Converter={EdiViewsConv:DocumentStateToVisibilityConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                <!-- TextEditor -->
              </DataTemplate>
            </pane:PanesTemplateSelector.FileViewTemplate>
            <pane:PanesTemplateSelector.MiniUMLViewTemplate>
              <DataTemplate>
                <Grid Focusable="True"
                    KeyboardNavigation.IsTabStop="True"
                    Name="MiniUmlView"
                    behav:KeyboardFocus.On="{Binding ElementName=MiniUmlView}"
                    >
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>

                  <MiniUMLViews:RibbonView DataContext="{Binding vm_RibbonViewModel}" Grid.Row="0"/>
                  <MiniUMLViews:DocumentView DataContext="{Binding DocumentMiniUML}" Grid.Row="1" />
                </Grid>
              </DataTemplate>
            </pane:PanesTemplateSelector.MiniUMLViewTemplate>

            <pane:PanesTemplateSelector.FileStatsViewTemplate>
              <DataTemplate>
                <EdiViewsFileStats:FileStatsView />
              </DataTemplate>
            </pane:PanesTemplateSelector.FileStatsViewTemplate>
            <pane:PanesTemplateSelector.RecentFilesViewTemplate>
              <DataTemplate>
                <EdiViewsRecent:RecentFilesView />
              </DataTemplate>
            </pane:PanesTemplateSelector.RecentFilesViewTemplate>
            <pane:PanesTemplateSelector.FileExplorerViewTemplate>
                <DataTemplate>
                <EdiViewsFileExplorer:FileExplorerView />
                </DataTemplate>
            </pane:PanesTemplateSelector.FileExplorerViewTemplate>
          </pane:PanesTemplateSelector>
      </avalonDock:DockingManager.LayoutItemTemplateSelector>

        <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
          <pane:PanesStyleSelector>
            <pane:PanesStyleSelector.StartPageStyle>
              <Style TargetType="{x:Type avalonDock:LayoutItem}">
                <Setter Property="Title" Value="{Binding Model.Title}"/>
                <Setter Property="ToolTip" Value="{Binding Model.StartPageTip}"/>
                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
              </Style>
            </pane:PanesStyleSelector.StartPageStyle>
            <pane:PanesStyleSelector.FileStyle>
              <!-- TextEditor MiniUML File Style -->
              <Style TargetType="{x:Type avalonDock:LayoutItem}">
                <Setter Property="Title" Value="{Binding Model.Title}"/>
                <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
            </Style>
            </pane:PanesStyleSelector.FileStyle>
            <pane:PanesStyleSelector.Log4NetStyle>
              <Style TargetType="{x:Type avalonDock:LayoutItem}">
                <Setter Property="Title" Value="{Binding Model.Title}"/>
                <Setter Property="ToolTip" Value="{Binding Model.ScreenTip}"/>
                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
              </Style>
            </pane:PanesStyleSelector.Log4NetStyle>

            <pane:PanesStyleSelector.ToolStyle>
              <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                <Setter Property="Title" Value="{Binding Model.Title}"/>
                <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
              </Style>
            </pane:PanesStyleSelector.ToolStyle>

            <!-- pane:PanesStyleSelector.Log4NetToolViewStyle>
            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
              <Setter Property="Title" Value="{Binding Model.Title}"/>
              <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
              <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
              <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
              <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
              <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
            </Style>
          </pane:PanesStyleSelector.Log4NetToolViewStyle>
          <pane:PanesStyleSelector.Log4NetMessageToolViewStyle>
            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
              <Setter Property="Title" Value="{Binding Model.Title}"/>
              <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
              <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
              <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
              <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
              <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
            </Style>
          </pane:PanesStyleSelector.Log4NetMessageToolViewStyle>

          <pane:PanesStyleSelector.RecentFilesStyle> - Recent File Tool Window -
            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
              <Setter Property="Title" Value="{Binding Model.Title}"/>
              <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
              <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
              <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
              <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
              <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
            </Style>
          </pane:PanesStyleSelector.RecentFilesStyle -->
          </pane:PanesStyleSelector>
        </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
        <avalonDock:DockingManager.LayoutUpdateStrategy>
          <pane:LayoutInitializer/>
        </avalonDock:DockingManager.LayoutUpdateStrategy>

        <avalonDock:LayoutRoot>
          <avalonDock:LayoutPanel>
            <avalonDock:LayoutDocumentPane/>
            <avalonDock:LayoutAnchorablePane DockWidth="350">
            </avalonDock:LayoutAnchorablePane>
          </avalonDock:LayoutPanel>
        </avalonDock:LayoutRoot>
      </avalonDock:DockingManager>

    <!-- view:StatusBar  Grid.Row="4" / -->
  </Grid>

</mui:ModernWindow>
