<UserControl x:Class="Edi.View.MainToolbar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             
            xmlns:avalonEdit="clr-namespace:ICSharpCode.AvalonEdit.Highlighting;assembly=ICSharpCode.AvalonEdit"
            xmlns:cmd="clr-namespace:Util.Command;assembly=Util"
            xmlns:behav="clr-namespace:EdiViews.Behaviour;assembly=EdiViews"

            xmlns:conv="clr-namespace:Edi.Converter"
            xmlns:vm="clr-namespace:Edi.ViewModel"
             >
  <Grid>
    <ToolBarTray Grid.Row="1" SnapsToDevicePixels="True" >
      <ToolBar  VerticalAlignment="Stretch" ToolBarTray.IsLocked="True"
                SnapsToDevicePixels="True"
                behav:HideToolbarOverflowButton.HideGrip="True">
        <Button Command="New" SnapsToDevicePixels="True"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
          <Image Source="{StaticResource Image_New}" Height="32" SnapsToDevicePixels="True" />
        </Button>
        <Button Command="Open" SnapsToDevicePixels="True"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
          <Image Source="{StaticResource Image_Open}" Height="32" SnapsToDevicePixels="True" />
        </Button>
        <Button Command="Save" SnapsToDevicePixels="True"
              ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
          <Image Source="{StaticResource Image_Save}" Height="32" SnapsToDevicePixels="True" />
        </Button>

        <Button Command="cmd:AppCommand.SaveAll" SnapsToDevicePixels="True"
              ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
          <Image Source="{StaticResource Image_SaveAll}" Height="32" SnapsToDevicePixels="True" />
        </Button>

        <Separator Margin="3" SnapsToDevicePixels="True" />

        <!-- TextArea Edit Commands work via
       (1) 'Command="Copy"'
           'Command="Cut"'
           'Command="Paste"'
           'Command="Delete"'

            that is via ApplicationCommands.Cut (WPF standard fucntionality since AvalonEdit registers its Edit commands there).

       (2) Or they can be executed via custom commands defined in Workspace_Commands:
            
            Command="cmd:AppCommand.CutItem"
            CommandParameter="{Binding ElementName=dockManager}"

            Command="cmd:AppCommand.CopyItem"
            CommandParameter="{Binding ElementName=dockManager}"

            Command="cmd:AppCommand.PasteItem"
            CommandParameter="{Binding ElementName=dockManager}"

            Command="cmd:AppCommand.DeleteItem"
            CommandParameter="{Binding ElementName=dockManager}"

            In any case, the commandbinding does not succeed when the document is not docked
            (see comment in Workspace_Commands.PerformTextAreaEdit for more details)
      -->
        <Button Command="Copy" SnapsToDevicePixels="True"
                ToolTip="Copy">
          <Image Source="{StaticResource Image_Copy}" Height="32" SnapsToDevicePixels="True" />
        </Button>
        <Button Command="Cut" SnapsToDevicePixels="True"
                ToolTip="Cut">
          <Image Source="{StaticResource Image_Cut}" Height="32" SnapsToDevicePixels="True" />
        </Button>
        <Button Command="Paste" SnapsToDevicePixels="True"
                ToolTip="Paste">
          <Image Source="{StaticResource Image_Paste}" Height="32" SnapsToDevicePixels="True" />
        </Button>
        <Button Command="Delete" SnapsToDevicePixels="True"
                ToolTip="Delete">
          <Image Source="{StaticResource Image_Delete}" Height="32"/>
        </Button>

        <Separator Margin="3"/>

        <Button Command="Undo" SnapsToDevicePixels="True"
                ToolTip="Undo">
          <Image Source="{StaticResource Image_Undo}" Height="32"/>
        </Button>
        <Button Command="Redo" SnapsToDevicePixels="True"
                ToolTip="Redo">
          <Image Source="{StaticResource Image_Redo}" Height="32"/>
        </Button>
        <Separator/>
        <ToggleButton IsChecked="{Binding ActiveEdiDocument.WordWrap, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      CommandParameter="{x:Static vm:ToggleEditorOption.WordWrap}"
                      Command="{Binding ToggleEditorOptionCommand}"
                      ToolTip="Word Wrap">
          <Image Source="{StaticResource Image_WordWrap}" Height="32"/>
        </ToggleButton>
        <ToggleButton IsChecked="{Binding ActiveEdiDocument.ShowLineNumbers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  CommandParameter="{x:Static vm:ToggleEditorOption.ShowLineNumber}"
                  Command="{Binding ToggleEditorOptionCommand}"
                  ToolTip="Show Line Numbers">
          <Image Source="{StaticResource Image_ShowLineNumbers}" Height="32"/>
        </ToggleButton>
        <ToggleButton IsChecked="{Binding ActiveEdiDocument.ShowEndOfLine, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding ToggleEditorOptionCommand}"
                      CommandParameter="{x:Static vm:ToggleEditorOption.ShowEndOfLine}"
                      ToolTip="Show End of Line">
          <Image Source="{StaticResource Image_EndOfLine}" Height="32"/>
        </ToggleButton>
        <ToggleButton IsChecked="{Binding ActiveEdiDocument.ShowSpaces, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding ToggleEditorOptionCommand}"
                      CommandParameter="{x:Static vm:ToggleEditorOption.ShowSpaces}"
                      ToolTip="Show Space Characters">
          <Image Source="{StaticResource Image_Space}" Height="32"/>
        </ToggleButton>
        <ToggleButton IsChecked="{Binding ActiveEdiDocument.ShowTabs, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding ToggleEditorOptionCommand}"
                      CommandParameter="{x:Static vm:ToggleEditorOption.ShowTabs}"
                      ToolTip="Show Tab Characters">
          <Image Source="{StaticResource Image_Tabs}" Height="32"/>
        </ToggleButton>

        <Separator Visibility="{Binding Path=ActiveDocument, Mode=OneWay, Converter={conv:ActiveDocumentToVisibilityConverter}}"
                   Margin="3" />
        <!-- Select Highlighting pattern combobox is visible only if there is an active document (otherwise there ain't much to highlight) -->
        <ComboBox SelectedItem="{Binding ActiveEdiDocument.HighlightingDefinition}"
				          ItemsSource="{Binding Source={x:Static avalonEdit:HighlightingManager.Instance}, Path=HighlightingDefinitionsSortedByName}"
                  Visibility="{Binding Path=ActiveDocument, Mode=OneWay, Converter={conv:ActiveDocumentToVisibilityConverter}}"
                  MinWidth="100" Margin="3,0"
                  ToolTip="Text Highlighting"
        />
        <Button Command="cmd:AppCommand.DisableHighlighting" SnapsToDevicePixels="True"
                Margin="3,0"
                Visibility="{Binding Path=ActiveDocument, Mode=OneWay, Converter={conv:ActiveDocumentToVisibilityConverter}}"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
          <Image Source="{StaticResource Image_SyntaxHighlighting}" Height="32"/>
        </Button>
      </ToolBar>
    </ToolBarTray>
  </Grid>
</UserControl>
